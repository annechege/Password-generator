#!/usr/bin/env python3.6
import random
from user import User
from credential import Credential

#functions for user_account
def create_user(fname,lname,phone,email):
  '''
  Function to create a new user
  '''
  new_user = User(fname,lname,phone,email)
  return new_user
def save_user(user):
  '''
  Function to save user
  '''
  user.save_user()

def del_user(user):
  '''
  Function to delete a user
  '''
  user.delete_user()

def copy_email(user,number):
  '''
  Function to delete a user
  '''
  user.copy_email(number)

def find_user(number):
  '''
  Function that finds a user by number and returns the user
  '''
  return User.find_by_number(number)

def check_existing_user(number):
  '''
  Function that check if user exists with number and returns a Boolean
  '''
  return User.user_exist(number)

def display_users():
  '''
  Function that returns all the saved users
  '''
  return User.display_users()
#functions for user_credential
def create_credential(uname,password,phone):
  '''
  Function to create a new credential
  '''
  new_credential = Credential(uname,password,phone)
  return new_credential

def save_credential(credential):
  '''
  Function to save credential
  '''
  credential.save_credential()

def del_credential(credential):
  '''
  Function to delete a credential
  '''
  credential.delete_credential()
def copy_pwd(credential,number):
  '''
  Function to delete a credential
  '''
  credential.copy_pwd(number)

def find_credential(number):
  '''
  Function that finds a credential by number and returns the credential
  '''
  return Credential.find_credential_by_number(number)

def check_existing_credential(number):
  '''
  Function that check if credential exists with number and returns a Boolean
  '''
  return Credential.credential_exist(number)

def display_credentials():
  '''
  Function that returns all the saved credentials
  '''
  return Credential.display_credentials()


def main():
  print("Hello, Welcome to your password locker account \n")
  print("Enter command to chose what to do: \n create - command to create new account choosing your own password  \n create-auto - command to create account with auto generated password \n exit - command to exit the program \n")

  while True:
    short_code = input().lower()

    #user creating own password
    if short_code == 'create':
      print("New user Account")
      print("-"*10)

      print ("Enter your first name ....")
      f_name = input()

      print("Enter your last name ...")
      l_name = input()

      print("Enter your username ...")
      u_name = input()
      print("Enter password ...")
      u_password = input()

      print("Enter your phone number ...")
      p_number = input()

      print("Enter your email address ...")
      e_address = input()
      print("-"*10)
      print("-"*60)

      save_user(create_user(f_name,l_name,p_number,e_address)) # create and save new user.
      print(f"New user {f_name} {l_name} created")
      print("-"*10)

      save_credential(create_credential(u_name,u_password,p_number)) # create and save new user.
      print(f"New Credentials: username = {u_name} , password = {u_password} created")
      print("-"*10)
      print("Enter command login -to login to your account")

    #creating account with auto generated password
    if short_code == 'create-auto':
      print("New user Account")
      print("-"*10)

      print ("Enter first name ....")
      f_name = input()

      print("Enter last name ...")
      l_name = input()

      print("Enter username ...")
      u_name = input()
      print("-"*10)
      print("-"*60)
      characters = "abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!-/\|_@#$%&*?"
      u_password = "".join(random.sample(characters, 8))
      print(f"Your autogenerated password is {u_password}")
